# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Comment {
  avatarUrl: String
  content: String!
  createdAt: DateTime!
  id: ID!
  post: Post!
  postId: String!
  user: User!
  userId: String!
  username: String
}

input CreateCommentInput {
  content: String!
  createdAt: DateTime!
  postId: String!
  userId: String!
}

input CreatePostInput {
  content: String!
  imageUrl: String!
  likes: Int!
  userId: String!
}

input CreateTurboMarketInput {
  brand: String!
  description: String!
  fuelType: String!
  imageUrl: String
  location: String!
  mileage: String!
  model: String!
  price: String!
  title: String!
  transmission: String!
  userId: String!
  year: String!
}

input CreateUserInput {
  avatarUrl: String
  email: String!
  password: String!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type LoginResponse {
  accessToken: String!
  message: String!
  refreshToken: String!
}

type Mutation {
  createComment(createComment: CreateCommentInput!): Comment!
  createMany(data: [CreateCommentInput!]!): [Comment!]!
  createPost(createPost: CreatePostInput!): Post!
  createTurboMarket(data: CreateTurboMarketInput!): TurboMarket!
  createUser(data: CreateUserInput!): User!
  handleLikes(updatePost: UpdatePostInput!): Post!
  login(userLogin: UserLogin!): LoginResponse!
  refreshToken(refreshToken: String!): String!
  registerMany(data: [CreateUserInput!]!): [User!]!
  removeComment(id: String!): Comment!
  removePost(id: String!): Post!
  removeTurboMarket(id: String!): TurboMarket!
  removeUser(id: String!): User!
  updateComment(updateComment: UpdateCommentInput!): Comment!
  updatePost(updatePost: UpdatePostInput!): Post!
  updateTurboMarket(updateTurboMarketInput: UpdateTurboMarketInput!): TurboMarket!
  updateUser(updateUserInput: UpdateUserInput!): User!
}

type Post {
  comments: [Comment!]!
  content: String!
  createdAt: DateTime!
  id: ID!
  imageUrl: String!
  isLiked: Boolean!
  likes: Int!
  updatedAt: DateTime!
  user: User!
  userId: String!
}

type Query {
  comment(id: String!): Comment!
  comments: [Comment!]!
  commentsByPost(postId: String!): [Comment!]!
  post(id: String!): Post!
  postAll(userId: String): [Post!]!
  turboMarket(id: String!): TurboMarket!
  turboMarketAll: [TurboMarket!]!
  user(id: String!): User!
  users: [User!]!
}

type TurboMarket {
  brand: String!
  description: String!
  fuelType: String!
  id: ID!
  imageUrl: String
  location: String!
  mileage: String!
  model: String!
  price: String!
  title: String!
  transmission: String!
  user: UserProfile!
  userId: String!
  year: String!
}

input UpdateCommentInput {
  content: String
  createdAt: DateTime
  id: ID!
  postId: String
  userId: String
}

input UpdatePostInput {
  content: String
  id: ID!
  imageUrl: String
  likes: Int
  userId: String
}

input UpdateTurboMarketInput {
  brand: String
  description: String
  fuelType: String
  id: ID!
  imageUrl: String
  location: String
  mileage: String
  model: String
  price: String
  title: String
  transmission: String
  userId: String
  year: String
}

input UpdateUserInput {
  avatarUrl: String
  email: String
  id: ID!
  password: String
  username: String
}

type User {
  avatarUrl: String
  bio: String
  comments: [Comment!]!
  createdAt: DateTime!
  email: String
  id: ID!
  password: String!
  posts: [Post!]!
  username: String!
}

input UserLogin {
  password: String!
  username: String!
}

type UserProfile {
  avatarUrl: String
  username: String!
}