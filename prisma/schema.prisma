generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  username     String        @unique
  email        String        @unique
  password     String
  avatarUrl    String?
  bio          String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  comments     Comment[]
  posts        Post[]
  RefreshToken RefreshToken?
  TurboMarket  TurboMarket[]
  Like Like[]
  likedPosts Post[]    @relation("PostLikedBy")
}

model Post {
  id        String    @id @default(uuid())
  userId    String
  content   String
  imageUrl  String?
  likes     Int       @default(0)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  comments  Comment[]
  user      User      @relation(fields: [userId], references: [id])
  likesList Like[]
  likedBy   User[]    @relation("PostLikedBy")
}

model Like {
  id     String @id @default(uuid())
  userId String
  postId String
  user   User   @relation(fields: [userId], references: [id])
  post   Post   @relation(fields: [postId], references: [id])

  @@unique([userId, postId])
}

model Comment {
  id        String   @id @default(uuid())
  userId    String
  postId    String
  content   String
  createdAt DateTime @default(now())
  post      Post     @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model TurboMarket {
  id           String   @id @default(uuid())
  userId       String
  title        String
  description  String
  price        String
  brand        String
  model        String
  year         String
  mileage      String
  fuelType     String
  transmission String
  imageUrl     String?
  location     String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String   @unique
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
